name: AI-Powered Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  review-and-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      actions: read # Required to download artifacts

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      - name: Set up SonarScanner
        run: |
          set -e
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip
          echo "${{ runner.workspace }}/${{ github.event.repository.name }}/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Generate diff file
        id: generate_diff
        run: |
          set -e
          git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > tmp.diff
          echo "Generated tmp.diff for PR #${{ github.event.pull_request.number }}"

      - name: Run AI Review and Generate Report
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          set -e
          run-ai-review --diff-file tmp.diff --output-file output/review_report.md --pr-number ${{ github.event.pull_request.number }}

      - name: Upload Review Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: review-report
          path: output/review_report.md

      - name: Post Review Summary to GitHub
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const { owner, repo } = context.repo;
            const pull_number = context.issue.number;

            // Read the report content from the file
            const reportBody = fs.readFileSync('./output/review_report.md', 'utf8');

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: pull_number,
              body: reportBody
            });
